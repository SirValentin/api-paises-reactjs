{"version":3,"sources":["components/Nav.js","components/Header.js","components/Card.js","components/Country.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","props","useState","darkMode","setDarkMode","className","onClick","console","log","Header","dropdown","setdropdown","cambiarRegion","region","type","placeholder","value","EventTarget","onChange","e","callback","target","card","to","name","src","flag","alt","population","capital","Country","itemCurrencies","itemLanguages","nombre","useParams","pais","setPais","useEffect","a","fetch","data","json","p","obtenerDatos","currencies","map","item","languages","itemBorders","borders","nativeName","subregion","topLevelDomain","App","paises","setPaises","paisesFiltrados","setPaisesFiltrados","setRegion","mainClass","then","response","length","catch","path","exact","resinput","filter","toLowerCase","includes","resRegion","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9edc7213.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../styles/nav.css'\r\nimport {useState} from 'react'\r\n\r\nexport default function Nav(props) {\r\n\r\n    const [darkMode, setDarkMode] = useState(true)\r\n\r\n    const onDarkMode= () => {\r\n        setDarkMode(!darkMode)\r\n        console.log(darkMode);\r\n        props.darkMode(darkMode)\r\n    }    \r\n    return (\r\n        <div className=\"container-nav\">\r\n            <nav>\r\n                <div>\r\n                    <h3>Where in the world?</h3>\r\n                </div>\r\n                <div>\r\n                    <div className=\"btn-darkMode\" onClick={(onDarkMode)}>\r\n                        Dark Mode\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport '../styles/header.css'\r\n\r\nexport default function Header(props) {\r\n\r\n    const [dropdown, setdropdown] = useState(false)\r\n\r\n    const busqueda = e => {      \r\n        props.callback(e.target.value)        \r\n    }\r\n\r\n    const cambiarRegion = (region) => {\r\n        props.region(region)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-header\">\r\n            <div>\r\n                <input \r\n                    type=\"text\"\r\n                    className=\"buscador\"\r\n                    placeholder=\"Search for Country...\"\r\n                    value={EventTarget.value}\r\n                    onChange={busqueda}/>                    \r\n            </div>\r\n            <div className={`${dropdown?'dropdown open':'dropdown'}`} onClick={()=> setdropdown(!dropdown)}>\r\n                Filter by Region\r\n                <ul>\r\n                    <li onClick={()=>cambiarRegion('')}>Todos</li>\r\n                    <li onClick={()=>cambiarRegion('Africa')}>Africa</li>\r\n                    <li onClick={()=>cambiarRegion('Americas')}>Americas</li>\r\n                    <li onClick={()=>cambiarRegion('Asia')}>Asia</li>\r\n                    <li onClick={()=>cambiarRegion('Europe')}>Europe</li>\r\n                    <li onClick={()=>cambiarRegion('Oceania')}>Oceania</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport '../styles/card.css'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default function card(props) {\r\n    return (\r\n        <div className=\"card\">\r\n            <Link to={`/Country/${props.name}`}>\r\n                <img src={props.flag} alt=\"\"/>\r\n                <div className=\"card-body\">\r\n                    <h2>{props.name}</h2>\r\n                    <p><strong>Population:</strong> {props.population}</p>\r\n                    <p><strong>Region:</strong> {props.region}</p>\r\n                    <p><strong>Capital:</strong> {props.capital}</p>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n","import React,{useState,useEffect} from 'react'\r\nimport {useParams, Link} from 'react-router-dom'\r\nimport '../styles/country.css'\r\n\r\nexport default function Country(props) {\r\n        \r\n    const {nombre} = useParams()\r\n    const [pais,setPais] = useState([])\r\n\r\n    useEffect(() => {\r\n        const obtenerDatos = async () => {\r\n            const data = await fetch(`https://restcountries.eu/rest/v2/name/${nombre}`)\r\n            const p = await data.json()\r\n            setPais(p[0])\r\n        }      \r\n        obtenerDatos()\r\n    },[nombre])\r\n    \r\n    let itemCurrencies;\r\n    if (pais.currencies){\r\n        itemCurrencies = pais.currencies.map(item => item.name)\r\n    }\r\n    let itemLanguages;\r\n    if (pais.languages){\r\n        itemLanguages = pais.languages.map(item => item.name)\r\n    }\r\n    let itemBorders = [];\r\n    if (pais.borders){\r\n        itemBorders = pais.borders.map(item => item)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"container-body\">                \r\n                <Link to=\"/\" className=\"btn-back\">Back</Link>                \r\n                <div className=\"container-country\">\r\n                    <div className=\"flag\">\r\n                        <img src={pais.flag} alt=\"\"/>       \r\n                    </div>\r\n                    <div className=\"info\">\r\n                        <h2>{pais.name}</h2>\r\n                        <div className=\"info-body\">\r\n                            <div>\r\n                                <p><strong>Native Name: </strong>{pais.nativeName}</p>\r\n                                <p><strong>Population: </strong>{pais.population}</p>\r\n                                <p><strong>Region: </strong>{pais.region}</p>\r\n                                <p><strong>Sub Region: </strong>{pais.subregion}</p>\r\n                                <p><strong>Capital: </strong>{pais.capital}</p>\r\n                            </div>\r\n                            <div>\r\n                                <p><strong>Top Level Domain: </strong>{pais.topLevelDomain}</p>\r\n                                <p><strong>Currencies: </strong>{itemCurrencies}</p>\r\n                                <p><strong>Languages: </strong>{itemLanguages}</p>\r\n                            </div>                        \r\n                        </div>\r\n                        <div className=\"info-footer\">\r\n                            <p><strong>Border Countries:</strong></p>\r\n                            {       \r\n                                                                                      \r\n                                itemBorders.map(item => \r\n                                    <div                                         \r\n                                        key={item} \r\n                                        className=\"border-country\"\r\n                                        >\r\n                                            {item }\r\n                                    </div>\r\n                                )\r\n                            }\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>  \r\n            </div>          \r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport {useEffect,useState} from 'react'\nimport Nav from './components/Nav'\nimport Header from './components/Header'\nimport Card from './components/Card'\nimport Country from './components/Country'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n\n  const [paises, setPaises] = useState([])\n  const [paisesFiltrados, setPaisesFiltrados] = useState([])\n  const [region, setRegion] = useState('')\n  const [darkMode, setDarkMode] = useState(false)\n  const mainClass = darkMode ? 'darkmode' : 'lightmode'\n\n  const getapi = () => {\n    fetch('https://restcountries.eu/rest/v2/all')\n    .then((response) => {\n      return response.json()\n    })\n    .then((data) => {\n      setPaises(data)\n      setPaisesFiltrados(data)\n      console.log(data.length);\n    })\n    .catch(() => {\n      console.log('Error Fetch');\n    })\n  }\n\n  const filtroBusqueda = resinput => {  \n    setPaisesFiltrados(paises.filter(pais => pais.name.toLowerCase().includes(resinput.toLowerCase())))\n  }\n\n  const paisPorRegion = resRegion => {\n    setRegion(resRegion)\n    console.log(region)\n  }\n\n  useEffect(() => {\n    getapi()    \n  },[])\n\n  const filtrado = () => {\n    let p = []\n    if(region === ''){\n      p = paisesFiltrados.map((pais) => {\n        return(\n          <Card key={pais.name}\n            name={pais.name}\n            population={pais.population}\n            region={pais.region}\n            capital={pais.capital}\n            flag={pais.flag}/>\n        )\n      })\n    }else{\n      p = paisesFiltrados.filter(pais => pais.region === region).map(pais => {\n        return(\n          <Card key={pais.name}\n            name={pais.name}\n            population={pais.population}\n            region={pais.region}\n            capital={pais.capital}\n            flag={pais.flag}/>\n        )\n      })\n    }\n    return p\n  }\n\n  const onDarkMode = value => {\n    setDarkMode(value)       \n  }\n\n  return (\n    <main className={mainClass}>\n    <Router>\n      <div>\n        <Nav darkMode={onDarkMode} />\n        <Switch>\n          <Route path=\"/\" exact>\n            <div>\n              <Header callback={filtroBusqueda} region={paisPorRegion}/>\n              <div className=\"card-list\">\n                {\n                  filtrado()\n                }\n              </div>\n            </div>\n          </Route>\n          <Route path=\"/country/:nombre\">\n            <Country/>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n    </main>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}